---
import { type CollectionEntry, getCollection } from 'astro:content';
import { twMerge } from 'tailwind-merge';
import {motion} from 'framer-motion';
import PostContent from '../../components/PostContent.astro';
import PostHero from '../../components/PostHero.astro';

import DefaultLayout from "../../layouts/Default.astro";
import CutCornerButton from '../../components/CutCornerButton';
import Card from '../../components/Card';
import Tag from '../../components/Tag';
import { getPostColor } from '../../utils/post-utils';

type Props = CollectionEntry<'blog'>;

const posts = (await getCollection('blog')).sort(
  (a: Props, b: Props) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);

const latestPost = posts[0];
---
<DefaultLayout>
  <PostHero>
    <div class="max-w-3xl mx-auto">
      <p class="font-extrabold uppercase text-center text-zinc-500 tracking-wider">Latest Post</p>
      <h1 class="font-heading font-black text-5xl md:text-6xl lg:text-7xl text-center mt-4">{latestPost.data.title}</h1>
      <p class="text-center text-lg md:text-2xl mt-6 text-zinc-400 max-w-xl mx-auto">{latestPost.data.description}</p>
      <div class="flex justify-center mt-10">
        <a href={`/blog/${latestPost.slug}`}>
          <CutCornerButton>Read More</CutCornerButton>
        </a>
      </div>
    </div>
  </PostHero>

  <PostContent>
    <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
      <div class="flex flex-col gap-8 lg:gap-12">
        {posts.map(({data: {title, description, category}, slug}: Props, index: number) => {
          const color = getPostColor(category);

          return (
            <motion.a
              client:load
              initial={{ opacity: 0, y: 20 }}
              whileInView={{opacity: 1, y: 0}}
              viewport={{ once: true, amount: 0.5 }}
              transition={{ duration: 0.5, ease: 'easeIn' }}
              href={`/blog/${slug}`}
              className={twMerge(index % 2 ? 'block md:hidden' : 'md:block')}
            >
              <Card
                color={color}
                buttonText='Read More'
              >
                <Tag color={color}>{category}</Tag>
                <h2 class="font-heading font-black text-3xl mt-4">{title}</h2>
                <p class="text-lg text-zinc-400 mt-6">{description}</p>
              </Card>
            </motion.a>
          );
        })}
      </div>
      <div>
        <div class="hidden md:flex flex-col gap-8 lg:gap-12 mt-24 ">
          {posts.map(({data: {title, description, category}, slug}: Props, index: number) => {
            const color = getPostColor(category);

            return (
              <motion.a
                client:load
                initial={{ opacity: 0, y: 20 }}
                whileInView={{opacity: 1, y: 0}}
                viewport={{ once: true, amount: 0.5 }}
                transition={{ duration: 0.5, ease: 'easeIn' }}
                href={`/blog/${slug}`}
                className={twMerge(index % 2 ? 'md:block' : 'md:hidden')}
              >
                <Card
                  color={color}
                  buttonText='Read More'
                >
                  <Tag color={color}>{category}</Tag>
                  <h2 class="font-heading font-black text-3xl mt-4">{title}</h2>
                  <p class="text-lg text-zinc-400 mt-6">{description}</p>
                </Card>
              </motion.a>
            );
          })}
        </div>
      </div>
    </div>
  </PostContent>
</DefaultLayout>
